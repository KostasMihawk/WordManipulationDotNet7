@using WordManipulationDotNet7.Models
@using WordManipulationDotNet7.Services
@model WordManipulationDotNet7.ViewModels.DilosiSunexisisVm

@{
    ViewBag.Title = "ΔΗΛΩΣΗ ΣΥΝΕΧΙΣΗΣ ΠΛΗΣΤΕΙΡΙΑΣΜΟΥ";
    var Generator = new DropDownGenerator();
}



@using (Html.BeginForm("CreateDilosi","DilosiSunexisisNew", FormMethod.Post, new {@class = "form-control"}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Δημιουργία Δήλωσης Συνέχισης</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notary, htmlAttributes: new { @class = "form-label" })
            <div class="col-md-10">
                @Html.DropDownList("Notary", new SelectList(Generator.GetNotariesNew(), "Id", "Name", 1), htmlAttributes: new { @class = "form-select"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fund, htmlAttributes: new { @class = "form-label" })
            <div class="col-md-10">
                @Html.DropDownList("Fund", new SelectList(Generator.GetFunds(), "Id", "Name", 1), htmlAttributes: new { @class = "form-select"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Zone, htmlAttributes: new { @class = "form-label" })
            <div class="col-md-10">
                @Html.DropDownList("Zone", new SelectList(Generator.GetZones(), "Id", "Name", 1), htmlAttributes: new { @class = "form-select"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CaseNumber, htmlAttributes: new { @class = "form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CaseNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CaseNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Debtor, htmlAttributes: new { @class = "form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Debtor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Debtor, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "form-label" })
            <div class="col-md-10">               
                <select asp-for="Gender" asp-items="Html.GetEnumSelectList<Gender>()" class="form-select"></select>
            </div>
        </div>

        <div class="form-group">            
            <div class="col-md-10">              
                @Html.CheckBoxFor(model => model.Ar8ro966, new {htmlAttributes = new {@class="form-check-input"}})
                @Html.LabelFor(model => model.Ar8ro966, htmlAttributes: new { @class = "form-check-label" })
                @Html.ValidationMessageFor(model => model.Ar8ro966, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfOrder, htmlAttributes: new { @class = "form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfOrder, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfOrder, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfConfiscation, htmlAttributes: new { @class = "form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfConfiscation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfConfiscation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Δημιουργία" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Πίσω στην αρχική οθόνη", "Index", "Home")
</div>

